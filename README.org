[[http://melpa.org/#/link-hint][file:http://melpa.org/packages/link-hint-badge.svg]]
* Demonstration
Using this package to install this package:
[[http://noctuid.github.io/link-hint.el/assets/paradox_demonstration.gif][http://noctuid.github.io/link-hint.el/assets/paradox_demonstration.gif]]
* About
=link-hint.el= is inspired by the link hinting functionality in vim-like browsers and browser plugins such as pentadactyl. It provides commands for using avy to open or copy "links."

Currently the following types of links are supported:

- Plain text urls (e.g. =http://www.github.com/=; includes mu4e and irc urls)
- Shr urls (e.g. those in elfeed and html mu4e messages, eww urls, etc.)
- Htmlize/org mode urls
- Mu4e mailto addresses
- Mu4e attachments
- Help mode links
- Info mode links
- Package menu links (further description, install buttons, and keyword buttons)
- Compilation mode links
- Other button links (e.g. WoMan links)

Feel free to request support for any useful link type I may have missed. Also, if you think it would be beneficial to have a more specific link type split from a more generic link type, feel free to make an issue. For example, there may be some specific type of button you want to ignore or use in a custom command without affecting other buttons.

* Configuration
** Browser Choice
~browse-url~ is used for opening urls, so in the case that the desired browser is not being used by default, the user can set ~browse-url-browser-function~:

#+begin_src emacs-lisp
;; Use chromium to open urls
(setq browse-url-browser-function 'browse-url-chromium)
;; Use firefox to open urls
(setq browse-url-browser-function 'browse-url-firefox)
;; Use qutebrowser to open urls
(setq browse-url-generic-program "qutebrowser")
;; You can alternatively change this setting in the config
(setq browse-url-generic-args '("--target" "tab"))
(setq browse-url-browser-function 'browse-url-generic)
#+end_src

** Provided Commands
This package provides the following commands for operating on links:
- ~link-hint-open-link-at-point~ - Open the link at point.
- ~link-hint-copy-link-at-point~ - Copy link at point to kill ring (and optionally to the clipboard/primary).
- ~link-hint-open-link~ - Use avy to select and open a single visible link. If only one link is currently visible, it will be automatically opened without the need for selection.
- ~link-hint-open-multiple-links~ - Use avy to select multiple visible links and open them as soon as a key that does not correspond to a link (a key not in the avy overlay) is pressed (like pentadactyl's =g;=).
- ~link-hint-open-all-links~ - Opens all links visible in the buffer.
- ~link-hint-copy-link~ - Use avy to select and copy a single visible link to the kill ring. ~select-enable-clipboard~ and ~select-enable-clipboard~ can each be set to a non-nil value to also use the clipboard and/or primary.

~link-hint-copy-multiple-links~ and ~link-hint-copy-all-links~ also exist, but they may not be useful very often.

This package does not bind any commands by default.

** Ignoring Link Types
~link-hint-ignore-types~, ~link-hint-act-on-multiple-ignore-types~, and ~link-hint-act-on-all-ignore-types~ can be set by the user to change which link types will be operated on. For example, by default ~link-hint-open-all-links~ will ignore mu4e mailto addresses, mu4e attachments, info links, and help links. This is because it usually doesn't make sense to open more than one of these links types. In some cases, it may be useful to set these variables locally for certain modes. They can also be used to create more specific commands:
#+begin_src emacs-lisp
(defun my/mu4e-open-all-attachments ()
  "Open all visible mu4e attachments."
  (interactive)
  (let ((link-hint-ignore-types
         (remove 'mu4e-attachment link-hint-all-types-list))
        link-hint-act-on-all-ignore-types)
    (link-hint-open-all-links)))
#+end_src

~link-hint-copy-ignore-types~ can also be set by the user. However, note that by default it contains the types that there is no copy action for. Removing these types will result in some useless avy overlays over links (selecting them will have no effect).
